include:
  - project: 'pythagoras/ci-templates'
    file:
      - '/jobs/dependency-track.yml'
      - '/jobs/defect-dojo.yml'

workflow:
  rules:
    - if: $FORCE_PIPELINE == "True"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - when: never

stages:
  - test
  - deploy
  - scan

variables:
  POETRY_VERSION: "1.8.5"
  DOCKER_AUTH_CONFIG: $HARBOR_AUTH_CONFIG
  PYTHON_IMAGE_NAME: "pgs-python"
  PYTHON_IMAGE_TAG: "3.11"
  VENV_DIR: "$CI_PROJECT_DIR/.venv"

Lint with ruff:
  stage: test
  image: "${PGS_NEXUS_HOST}/${PYTHON_IMAGE_NAME}:${PYTHON_IMAGE_TAG}"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: on_success
  before_script:
    - python -m pip install uv
  script:
    - uvx ruff check src

Lint with mypy:
  stage: test
  image: "${PGS_NEXUS_HOST}/${PYTHON_IMAGE_NAME}:${PYTHON_IMAGE_TAG}"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: on_success
  before_script:
    - |
      python -m pip install uv
      uv venv
  script:
    - uv run mypy src

Run Tests:
  stage: test
  image: "${PGS_NEXUS_HOST}/${PYTHON_IMAGE_NAME}:${PYTHON_IMAGE_TAG}"
  services:
    - name: redis:6.2.10
  variables:
    REDIS_HOST: redis
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: on_success
  parallel:
    matrix:
      - PROVIDER: [ '<=3.0.0', '>=1.10.4' ]
  before_script:
    - |
      python -m pip install uv
      uv venv
      uv pip install "pydantic${PROVIDER}"
  script:
    - uv run pytest

Publish:
  image: "${PGS_NEXUS_HOST}/${PYTHON_IMAGE_NAME}:${PYTHON_IMAGE_TAG}"
  stage: deploy
  variables:
    PUBLISH_URL: "https://nexus.infra.myoffice.group/repository/private_cloud-pgs-pypi/"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
  before_script:
    - python -m pip install uv
  script:
    - |
      uv build
      uv publish --publish-url $PUBLISH_URL -u $PGS_NEXUS_USER -p $PGS_NEXUS_PASS
