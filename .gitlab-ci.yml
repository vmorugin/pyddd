include:
  - project: 'pythagoras/ci-templates'
    file:
      - '/jobs/dependency-track.yml'
      - '/jobs/defect-dojo.yml'

workflow:
  rules:
    - if: $FORCE_PIPELINE == "True"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - when: never

stages:
  - test
  - deploy
  - scan

Lint with flake8:
  stage: test
  image: ${DOCKER_REGISTRY_URL}/${PYTHON_IMAGE_TAG}
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: on_success
  before_script:
    - python -m pip install uv
  script:
    - |
      uvx flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      uvx flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --per-file-ignores="__init__.py:F401"

Lint with mypy:
  stage: test
  image: ${DOCKER_REGISTRY_URL}/${PYTHON_IMAGE_TAG}
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: on_success
  before_script:
    - python -m pip install uv
  script:
    - uvx run mypy .

Run Tests:
  stage: test
  image: ${DOCKER_REGISTRY_URL}/${PYTHON_IMAGE_TAG}
  services:
    - name: redis:6.2.10
  variables:
    REDIS_HOST: redis
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: on_success
  parallel:
    matrix:
      - PROVIDER: [ '<=3.0.0', '>=1.10.4' ]
  before_script:
    - |
      python -m pip install uv
      uv pip install "pydantic${PROVIDER}"
  script:
    - uvx run pytest

Publish:
  image: ${DOCKER_REGISTRY_URL}/${PYTHON_IMAGE_TAG}
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
  before_script:
    - python -m pip install uv
  script:
    - uv publish --index ${CI_API_V4_URL}/projects/368/packages/pypi -u __token__ -p ${CI_JOB_TOKEN}
